import React, { useState } from "react";
import Add from "../img/addAvatar.png";
import { createUserWithEmailAndPassword, updateProfile } from "firebase/auth";
import { auth, storage, db } from "../firebase";
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import { doc, setDoc } from "firebase/firestore";
// import { collection, addDoc } from "firebase/firestore";

const Register = () => {
  const [err, setErr] = useState(false);
  const handleSubmit = async (e) => {
    e.preventDefault();
    const displayName = e.target[0]?.value;
    const email = e.target[1]?.value;
    const password = e.target[2]?.value;
    const file = e.target[3]?.files[0];

    try {
      const res = await createUserWithEmailAndPassword(auth, email, password);

      const storageRef = ref(storage, `${res.user.uid}/${file.name}`);
      uploadBytesResumable(storageRef, file).then(
        (snapshot) => {
          getDownloadURL(snapshot.ref).then(
            (downloadURL) => {
              saveUser({
                uid: res.user.uid,
                displayName,
                email,
                photoURL: downloadURL,
              });
              // updateProfile
              updateUser(res.user, displayName, downloadURL);
            },
            (error) => {
              setErr(error);
              console.log(error);
              saveUser({
                uid: res.user.uid,
                displayName,
                email,
                photoURL: null,
              });
            }
          );
        },
        (error) => {
          setErr(error);
          console.log("what happened: ", error);
          saveUser({
            uid: res.user.uid,
            displayName,
            email,
            photoURL: null,
          });
        }
      );
    } catch (err) {
      setErr(true);
      console.log(err);
    }
  };

  const updateUser = async (resData, displayName, downloadURL) => {
    try {
      await updateProfile(resData, {
        displayName,
        photoURL: downloadURL,
      })
      console.log("updateProfile finished :");
    } catch (err) {
      setErr(err);
    }
  };

  const saveUser = async (userData) => {
    try {
      await setDoc(doc(db, "users", userData.uid), userData);
      // addDoc(collection(db, "users"), userData);

      // window.location.reload(false)
      console.log("Created new doc");
    } catch (error) {
      setErr(error);
      // alert('Failed to add portfolio')
    }
  };

  return (
    <div className="formContainer">
      <div className="formWrapper">
        <span className="logo">Lama Chat</span>
        <span className="title">Register</span>
        <form onSubmit={handleSubmit}>
          <input type="text" placeholder="display name" />
          <input type="email" placeholder="email" />
          <input type="password" placeholder="password" />
          <input style={{ display: "none" }} type="file" id="file" />
          <label htmlFor="file">
            <img src={Add} alt="Add" />
            <span>Add an avatar</span>
          </label>
          <button> Sign up</button>
          {err && <span>Somthing went wrong</span>}
        </form>
        <p>You do have an account? Login</p>
      </div>
    </div>
  );
};

export default Register;
